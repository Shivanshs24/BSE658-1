str(mydf)
summary(mydf)
mydf[1,]
mydf[,2]
mydf[1:2,]
mydf[,1][2]
mydf[mydf$participant=='vincenzo',]
participant<-c ('louis','paula','vincenzo')
mydf<-data.frame(particiant,score=c(67,85,32))
participant<-c ('louis','paula','vincenzo')
mydf<-data.frame(participant,score=c(67,85,32))
mydf
nrow(mydf)
ncol(mydf)
colnames(mydf)
mydf$score
str(mydf)
summary(mydf)
mydf[1,]
mydf[,2]
mydf[1:2,]
mydf[,1][2]
mydf[mydf$participant=='vincenzo',]
mydf[mydf$paricipant=='vincenzo',] $score
getwd()
list.files()
nettle<-read.csv('nettle_1999_climate.csv')
getwd()
list.files()
nettle <- read.csv('nettle_1999_climate.csv')
hist(nettle$Langs)
getwd()
list.files()
nettle <- read.csv('nettle 1999 climate.csv')
getwd()
list.files()
nettle <- read.csv('nettle_1999_climate.csv')
install.packages('car')
library(car)
citation('car')$textVersion
packageVersion('car')
citation()$textVersion
R.Version()$version.string
2*3
x<-2*3
x=2*3
x/2
x
1s()
2+2
3-2
3-
3/2
3*2
2^2
2^3
(2+3)*3
2+(3*3)
sqrt(4)
sqrt()
x<-c(2.3,1,5)
x
length(x)
mode(x)
class(x)
mynums<-10:1
mynums
sum(mynums)
min(mynums)
max(mynums)
range(mynums)
diff(range(mynums))
mean(mynums)
sd(mynums)
median(mynums)
mynums-5
mynums/2
mynums[1]
mynums[2]
mynums[1:4]
mynums[-2]
1:100
mynums>3
mynums>=3
mynums<4
mynums<=4
mynums==4
mynums!=4
mylog<-mynums>=3
class(mylog)
mynums[mylog]
mynums[mynums>=3]
gender<-c('F','M','M','F','F')
gender
class(gender)
gender[2]
gender[gender=='F']
mean(gender)
gender<-as.factor(gender)
gender
levels(gender)
gender[3]<-'not_declared'
gender
levels(gender)<-c('F','M','not_declared')
gender[3]<-'not_declared'
gender
participant<-c ('louis','paula','vincenzo')
mydf<-data.frame(participant,score=c(67,85,32))
mydf
nrow(mydf)
ncol(mydf)
colnames(mydf)
mydf$score
str(mydf)
summary(mydf)
mydf[1,]
mydf[,2]
mydf[1:2,]
mydf[,1][2]
mydf[mydf$participant=='vincenzo',]
mydf[mydf$paricipant=='vincenzo',] $score
getwd()
list.files()
nettle <- read.csv('nettle_1999_climate.csv')
list.files()
getwd()
list.files()
nettle <- read.csv('nettle_1999_climate.csv')
list.files()
list.files()
library(readxl)
nettle_1999_climate <- read_excel("D:/ICT-PBT/nettle 1999 climate.xlsx")
View(nettle_1999_climate)
getwd()
list.files()
nettle <- read.csv('nettle_1999_climate.csv')
getwd()
list.files()
nettle <- read.csv('nettle_1999_climate.xls')
getwd()
list.files()
nettle <- read.csv('nettle_1999_climate.xlsx')
install.packages('car')
library(car)
citation('car')$textVersion
packageVersion('car')
citation()$textVersion
R.Version()$version.string
install.packages("car")
install.packages('car')
library(car)
citation('car')$textVersion
packageVersion('car')
citation()$textVersion
R.Version()$version.string
install.packages('car')
library(car)
citation('car')$textVersion
packageVersion('car')
citation()$textVersion
R.Version()$version.string
install.packages('car')
library(car)
citation('car')$textVersion
packageVersion('car')
citation()$textVersion
R.Version()$version.string
getwd()
list.files()
nettle <- read.csv('nettle_1999_climate.xlsx')
library(readr)
nettle_1999_climate <- read_csv("C:/Users/shiva/Downloads/nettle 1999 climate.csv")
View(nettle_1999_climate)
library(readr)
nettle_1999_climate <- read_csv("C:/Users/shiva/Downloads/nettle_1999_climate.csv")
View(nettle_1999_climate)
getwd()
list.files()
nettle <- read.csv('nettle_1999_climate.xlsx')
getwd()
list.files()
nettle <- read.csv('nettle_1999_climate.csv')
getwd()
list.files()
nettle <- read.csv('nettle_1999_climate.csv')
getwd()
list.files()
nettle <- read.csv('nettle_1999_climate.csv')
nettle_1999_climate <- read.csv("C:/Users/shiva/Downloads/nettle_1999_climate.csv")
View(nettle_1999_climate)
getwd()
list.files()
nettle <- read.csv('nettle_1999_climate.csv')
library(readxl)
nettle_1999_climate <- read_excel("C:/Users/shiva/Downloads/nettle_1999_climate.xlsx")
View(nettle_1999_climate)
getwd()
list.files()
nettle <- read.xlsx('nettle_1999_climate.xlsx')
install.packages('car')
library(car)
citation('car')$textVersion
packageVersion('car')
citation()$textVersion
R.Version()$version.string
source("C:/Users/shiva/OneDrive/Pictures/Assignment 2 by 241180617.Rmd")
source("C:/Users/shiva/OneDrive/Pictures/Assignment 2 by 241180617.Rmd")
source("C:/Users/shiva/Downloads/Assignment 2 by 241180617.Rmd")
#Try it out yourself
#Define a vector with Grumpiness scores of you and your friends and find the z score for your self
X =
z = (X - mean(X)) / sd(X)
setwd("C:/Users/shiva/Documents/GitHub/BSE658-1/Module 3/Notebooks")
#Let's load some data
load( "parenthood.Rdata" )
who()
setwd("C:/Users/shiva/Documents/GitHub/BSE658-1/Module 3/Notebooks")
#Let's load some data
load( "parenthood.Rdata" )
setwd("C:/Users/shiva/Documents/GitHub/BSE658-1/Module 3/Notebooks")
#Let's load some data
load( "parenthood.Rdata" )
setwd("C:/Users/shiva/Documents/GitHub/BSE658-1/Module 3/Notebooks")
#Let's load some data
load( "parenthood.Rdata" )
describeby(parenthood)
describe(parenthood)
describe(parenthood)
#Let's also take a graphical look at the data
hist(parenthood$dan.sleep)
#Try plotting for the other 2 variables
install.packages("car")
install.packages("Rcpp")
library(car)
scatterplot( dan.grump ~ dan.sleep, data = parenthood, regLine = FALSE, smooth = FALSE)
scatterplot
install.packages("car")
install.packages("Rcpp")
library(car)
scatterplot( dan.grump ~ dan.sleep, data = parenthood, regLine = FALSE, smooth = FALSE)
scatterplot
library(car)
scatterplot( dan.grump ~ dan.sleep, data = parenthood, regLine = FALSE, smooth = FALSE)
#Plot a scatter plot for baby.sleep and dan.grump variables
scatterplot( baby.sleep ~ dan.grump, data = parenthood, regLine = FALSE, smooth = FALSE)
#Plot a scatter plot for baby.sleep and dan.grump variables
scatterplot( baby.sleep ~ dan.grump, data = parenthood, regLine = TRUE, smooth = FALSE)
#Plot a scatter plot for baby.sleep and dan.grump variables
scatterplot( baby.sleep ~ dan.grump, data = parenthood, regLine = TRUE, smooth = TRUE)
#Plot baby sleep and dan sleep here
cor(baby.sleep~ dan.sleep)
#Plot baby sleep and dan sleep here
cor(baby.sleep~ dan.sleep, data = parenthood)
#Plot baby sleep and dan sleep here
scatterplot(baby.sleep~ dan.sleep, data = parenthood)
cor(x = parenthood$dan.sleep, y = parenthood$dan.grump)
#Try giving the entire dataframe 'parenthood' as input in cor()
cor(x = parenthood$dan.sleep, y = parenthood$dan.grump)
cor(parenthood)
#Try giving the entire dataframe 'parenthood' as input in cor()
load( "anscombesquartet.Rdata" )
cor( X1, Y1 )
cor( X2, Y2 )
cor (X3, Y3)
cor (X4, Y4)
scatterplot()
scatterplot(X1~Y1, data=anscombe)
scatterplot(X1~Y3, data=anscombe)
scatterplot(effort$hours, effort$grade, regLine = TRUE, smooth = FALSE)
setwd("C:/Users/shiva/Documents/GitHub/BSE658-1/Module 3/Notebooks")
load( "effort.Rdata" )
effort
cor( effort$hours, effort$grade )
scatterplot(effort$hours, effort$grade, regLine = TRUE, smooth = FALSE)
scatterplot(effort$hours, effort$grade, regLine = FALSE, smooth = FALSE)
scatterplot(effort$hours, effort$grade, regLine = TRUE, smooth = FALSE)
scatterplot(effort$hours, effort$grade, regLine = TRUE, smooth = TRUE)
scatterplot(effort$hours, effort$grade, regLine = TRUE, smooth = False)
scatterplot(effort$hours, effort$grade, regLine = TRUE, smooth = FALSE)
hours.rank <- rank( effort$hours )   # rank students by hours worked
grade.rank <- rank( effort$grade )   # rank students by grade received
#Now try cor() function for these
cor( hours.rank, grade.rank )
#Execute this and compare with the correlation coefficient we got above
cor( effort$hours, effort$grade, method = "spearman")
load( "parenthood2.Rdata" )
print( parenthood2 )
describe( parenthood2 )
#Try it out yourself
#Define a vector with Grumpiness scores of you and your friends and find the z score for your self
X =
z = (X - mean(X)) / sd(X)
library(psych)
describe(parenthood)
describe.by(parenthood)
load( "parenthood2.Rdata" )
print( parenthood2 )
describe( parenthood2 )
#Check how many missing values are there for each variable - compare the values in 'n' with the number of days.
cor(parenthood2)
cor(parenthood2, use = "complete.obs")
cor(parenthood2, use = "pairwise.complete.obs")
#Try correlate() for parenthood2 here
cor()
#Try correlate() for parenthood2 here
cor(parenthood2)
install.packages("devtools")
devtools::install_github("kassambara/ggcorrplot")
install.packages("ggcorrplot")
data(mtcars)
corr <- round(cor(mtcars), 1)
head(corr[, 1:6])
p.mat <- cor_pmat(mtcars)
p.mat <- cor_pmat(mtcars)
install.packages("ggcorrplot")
p.mat <- cor_pmat(mtcars)
p.mat <- cor_pmat(mtcars)
data(mtcars)
corr <- round(cor(mtcars), 1)
head(corr[, 1:6])
p.mat <- cor_pmat(mtcars)
library(ggcorrplot)
p.mat <- cor_pmat(mtcars)
head(p.mat[, 1:4])
ggcorrplot(corr)
ggcorrplot(corr, mehod=c("circle"), type=c("full"), ggtheme= ggplot2::theme_dark(), title="", show.legend = TRUE, legend.title = "Corr", show.diag = NULL, colors = ("pink"))
ggcorrplot(corr, mehod=c("square"), type=c("full"), ggtheme= ggplot2::theme_dark(), title="", show.legend = TRUE, legend.title = "Corr", show.diag = NULL, colors = ("pink"))
ggcorrplot(corr, mehod=c("square"), type=c("full"), ggtheme= ggplot2::theme_dark(), title="", show.legend = TRUE, legend.title = "Corr", show.diag = NULL, colors = ("pink"))
ggcorrplot(corr, mehod=c("square"), type=c("full"), ggtheme= ggplot2::theme_dark(), title="", show.legend = TRUE, legend.title = "Corr", show.diag = NULL, colors = ("pink"))
ggcorrplot(corr, method=c("square"), type=c("full"), ggtheme= ggplot2::theme_dark(), title="", show.legend = TRUE, legend.title = "Corr", show.diag = NULL, colors = ("pink"))
ggcorrplot(corr, method=c("circle"), type=c("full"), ggtheme= ggplot2::theme_dark(), title="", show.legend = TRUE, legend.title = "Corr", show.diag = NULL, colors = ("pink"))
ggcorrplot(corr, method=c("circle"), type=c("full"), ggtheme= ggplot2::theme_grey(), title="", show.legend = TRUE, legend.title = "Corr", show.diag = NULL, colors = ("pink"))
ggcorrplot(corr, method=c("circle"), type=c("full"), ggtheme= ggplot2::theme_(), title="", show.legend = TRUE, legend.title = "Corr", show.diag = NULL)
ggcorrplot(corr, method=c("circle"), type=c("full"), ggtheme= ggplot2::theme_(), title="", show.legend = TRUE, legend.title = "Corr", show.diag = NULL)
ggcorrplot(corr, method=c("circle"), type=c("full"), ggtheme= ggplot2::theme_classic(), title="", show.legend = TRUE, legend.title = "Corr", show.diag = NULL)
ggcorrplot(corr, method=c("circle"), type=c("full"), ggtheme= ggplot2::theme_bw(), title="", show.legend = TRUE, legend.title = "Corr", show.diag = NULL)
ggcorrplot(corr, method=c("circle"), type=c("lower"), ggtheme= ggplot2::theme_bw(), title="", show.legend = TRUE, legend.title = "Corr", show.diag = NULL)
ggcorrplot(corr, method=c("circle"), type=c("full"), ggtheme= ggplot2::theme_bw(), title="", show.legend = TRUE, legend.title = "Corr", show.diag = NULL)
ggcorrplot(corr, method = "square" ggtheme= ggplot2::theme_grey())
ggcorrplot(corr, method = "square", ggtheme= ggplot2::theme_grey())
ggcorrplot(corr, method = "square", ggtheme= ggplot2::theme_grey(), show.diag = NULL, colors="blue")
ggcorrplot(corr, hc.order = TRUE, outline.col = "black")
ggcorrplot(corr, hc.order = TRUE, type = "upper",
outline.col = "white")
ggcorrplot(corr, hc.order = TRUE, type = "upper",
outline.col = "green")
ggcorrplot(corr, hc.order = TRUE, type = "upper",
outline.col = "white")
ggcorrplot(corr, hc.order = TRUE, type = "lower",
outline.col = "white")
ggcorrplot(corr, hc.order = TRUE, type = "lower",
outline.col = "white",
ggtheme = ggplot2::theme_gray,
colors = c("#8C9EC1", "white", "#A46726"))
ggcorrplot(corr, p.mat = p.mat, hc.order = TRUE,
type = "lower", sig = "blank")
ggcorrplot(corr, p.mat = p.mat, hc.order = TRUE,
type = "lower", insig = "blank")
ggcorrplot(corr, p.mat = p.mat, hc.order = TRUE,
type = "lower", insig = "black")
ggcorrplot(corr, p.mat = p.mat, hc.order = TRUE,
type = "lower", insig = "pch")
ggcorrplot(corr, hc.order = TRUE, type = "lower",
lab = TRUE)
library(psych)
#Try it out yourself
#Define a vector with Grumpiness scores of you and your friends and find the z score for your self
X =
z = (X - mean(X)) / sd(X)
#Try it out yourself
#Define a vector with Grumpiness scores of you and your friends and find the z score for your self
X = 100
z = (X - mean(X)) / sd(X)
library(psych)
#Try it out yourself
#Define a vector with Grumpiness scores of you and your friends and find the z score for your self
X = 100
z = (X - mean(X)) / sd(X)
setwd("C:/Users/shiva/Documents/GitHub/BSE658-1/Module 3/Notebooks")
#Let's load some data
load( "parenthood.Rdata" )
#Try describe() for the above dataframe
#Let's also take a graphical look at the data
hist(parenthood$dan.sleep)
#Try plotting for the other 2 variables
install.packages("car")
install.packages("Rcpp")
describe(parenthood)
library(car)
scatterplot( dan.grump ~ dan.sleep, data = parenthood, regLine = FALSE, smooth = FALSE)
#Plot a scatter plot for baby.sleep and dan.grump variables
scatterplot( baby.sleep ~ dan.grump, data = parenthood, regLine = TRUE, smooth = TRUE)
#Plot baby sleep and dan sleep here
scatterplot(baby.sleep~ dan.sleep, data = parenthood)
cor(x = parenthood$dan.sleep, y = parenthood$dan.grump)
cor(parenthood)
#Try giving the entire dataframe 'parenthood' as input in cor()
load( "anscombesquartet.Rdata" )
cor( X1, Y1 )
cor( X2, Y2 )
cor (X3, Y3)
cor (X4, Y4)
scatterplot(X1~Y3, data=anscombe)
setwd("C:/Users/shiva/Documents/GitHub/BSE658-1/Module 3/Notebooks")
load( "effort.Rdata" )
effort
cor( effort$hours, effort$grade )
scatterplot(effort$hours, effort$grade, regLine = TRUE, smooth = FALSE)
hours.rank <- rank( effort$hours )   # rank students by hours worked
grade.rank <- rank( effort$grade )   # rank students by grade received
#Now try cor() function for these
cor( hours.rank, grade.rank )
#Execute this and compare with the correlation coefficient we got above
cor( effort$hours, effort$grade, method = "spearman")
load( "parenthood2.Rdata" )
print( parenthood2 )
describe( parenthood2 )
#Check how many missing values are there for each variable - compare the values in 'n' with the number of days.
cor(parenthood2)
cor(parenthood2, use = "complete.obs")
cor(parenthood2, use = "pairwise.complete.obs")
#Try correlate() for parenthood2 here
cor(parenthood2)
install.packages("devtools")
devtools::install_github("kassambara/ggcorrplot")
library(psych)
setwd("C:/Users/shiva/Documents/GitHub/BSE658-1/Module 3/Notebooks")
#Let's load some data
load( "parenthood.Rdata" )
#Try describe() for the above dataframe
describe(parenthood)
#Let's also take a graphical look at the data
hist(parenthood$dan.sleep)
#Try plotting for the other 2 variables
library(car)
scatterplot( dan.grump ~ dan.sleep, data = parenthood, regLine = FALSE, smooth = FALSE)
#Plot a scatter plot for baby.sleep and dan.grump variables
scatterplot( baby.sleep ~ dan.grump, data = parenthood, regLine = TRUE, smooth = TRUE)
#Plot baby sleep and dan sleep here
scatterplot(baby.sleep~ dan.sleep, data = parenthood)
cor(x = parenthood$dan.sleep, y = parenthood$dan.grump)
cor(parenthood)
#Try giving the entire dataframe 'parenthood' as input in cor()
load( "anscombesquartet.Rdata" )
cor( X1, Y1 )
cor( X2, Y2 )
cor (X3, Y3)
cor (X4, Y4)
scatterplot(X1~Y3, data=anscombe)
setwd("C:/Users/shiva/Documents/GitHub/BSE658-1/Module 3/Notebooks")
load( "effort.Rdata" )
effort
cor( effort$hours, effort$grade )
scatterplot(effort$hours, effort$grade, regLine = TRUE, smooth = FALSE)
hours.rank <- rank( effort$hours )   # rank students by hours worked
grade.rank <- rank( effort$grade )   # rank students by grade received
#Now try cor() function for these
cor( hours.rank, grade.rank )
#Execute this and compare with the correlation coefficient we got above
cor( effort$hours, effort$grade, method = "spearman")
load( "parenthood2.Rdata" )
print( parenthood2 )
describe( parenthood2 )
#Check how many missing values are there for each variable - compare the values in 'n' with the number of days.
cor(parenthood2)
cor(parenthood2, use = "complete.obs")
cor(parenthood2, use = "pairwise.complete.obs")
#Try correlate() for parenthood2 here
cor(parenthood2)
install.packages("devtools")
devtools::install_github("kassambara/ggcorrplot")
install.packages("ggcorrplot")
data(mtcars)
corr <- round(cor(mtcars), 1)
head(corr[, 1:6])
data(mtcars)
corr <- round(cor(mtcars), 1)
head(corr[, 1:6])
p.mat <- cor_pmat(mtcars)
install.packages("ggcorrplot")
data(mtcars)
corr <- round(cor(mtcars), 1)
head(corr[, 1:6])
p.mat <- cor_pmat(mtcars)
install.packages("ggcorrplot")
library(ggcorrplot)
p.mat <- cor_pmat(mtcars)
head(p.mat[, 1:4])
ggcorrplot(corr, method=c("circle"), type=c("full"), ggtheme= ggplot2::theme_bw(), title="", show.legend = TRUE, legend.title = "Corr", show.diag = NULL)
ggcorrplot(corr, method = "square", ggtheme= ggplot2::theme_grey(), show.diag = NULL, colors="blue")
ggcorrplot(corr, hc.order = TRUE, outline.col = "black")
ggcorrplot(corr, hc.order = TRUE, type = "upper",
outline.col = "green")
ggcorrplot(corr, hc.order = TRUE, type = "lower",
outline.col = "white")
ggcorrplot(corr, hc.order = TRUE, type = "lower",
outline.col = "white",
ggtheme = ggplot2::theme_gray,
colors = c("#8C9EC1", "white", "#A46726"))
ggcorrplot(corr, hc.order = TRUE, type = "lower",
lab = TRUE)
ggcorrplot(corr, p.mat = p.mat, hc.order = TRUE,
type = "lower", insig = "pch")
source("~/GitHub/BSE658-1/Module 3/Notebooks/Module3_Nb2.Rmd")
source("~/GitHub/BSE658-1/Module 3/Notebooks/Module3_Nb2.Rmd")
source("~/GitHub/BSE658-1/Module 3/Notebooks/Module3_Nb2.Rmd")
source("~/GitHub/BSE658-1/Module 3/Notebooks/Module3_Nb2.Rmd")
source("~/GitHub/BSE658-1/Module 3/Notebooks/Module3_Nb2.Rmd")
source("~/GitHub/BSE658-1/Module 3/Notebooks/Module3_Nb2.Rmd")
source("~/GitHub/BSE658-1/Module 3/Notebooks/Module3_Nb2.Rmd")
source("~/GitHub/BSE658-1/Module 3/Notebooks/Module3_Nb2.Rmd")
library(psych)
